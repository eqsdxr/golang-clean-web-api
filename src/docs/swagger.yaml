definitions:
  api_handlers.personData:
    properties:
      first_name:
        maxLength: 10
        minLength: 4
        type: string
      last_name:
        maxLength: 20
        minLength: 6
        type: string
      mobile_number:
        maxLength: 11
        minLength: 11
        type: string
    required:
    - first_name
    - last_name
    - mobile_number
    type: object
  github_com_naeemaei_golang-clean-web-api_api_dto.CityResponse:
    properties:
      country:
        $ref: '#/definitions/github_com_naeemaei_golang-clean-web-api_api_dto.CountryResponse'
      id:
        type: integer
      name:
        type: string
    type: object
  github_com_naeemaei_golang-clean-web-api_api_dto.CountryResponse:
    properties:
      cities:
        items:
          $ref: '#/definitions/github_com_naeemaei_golang-clean-web-api_api_dto.CityResponse'
        type: array
      id:
        type: integer
      name:
        type: string
    type: object
  github_com_naeemaei_golang-clean-web-api_api_dto.CreateUpdateCityRequest:
    properties:
      countryId:
        type: integer
      name:
        maxLength: 20
        minLength: 3
        type: string
    required:
    - countryId
    - name
    type: object
  github_com_naeemaei_golang-clean-web-api_api_dto.CreateUpdateCountryRequest:
    properties:
      name:
        maxLength: 20
        minLength: 3
        type: string
    required:
    - name
    type: object
  github_com_naeemaei_golang-clean-web-api_api_dto.Filter:
    properties:
      filter:
        type: string
      filterTo:
        type: string
      filterType:
        description: text number
        type: string
      type:
        description: contains notContains equals notEqual startsWith lessThan lessThanOrEqual
          greaterThan greaterThanOrEqual inRange endsWith
        type: string
    type: object
  github_com_naeemaei_golang-clean-web-api_api_dto.GetOtpRequest:
    properties:
      mobileNumber:
        maxLength: 11
        minLength: 11
        type: string
    required:
    - mobileNumber
    type: object
  github_com_naeemaei_golang-clean-web-api_api_dto.LoginByUsernameRequest:
    properties:
      password:
        minLength: 6
        type: string
      username:
        minLength: 5
        type: string
    required:
    - password
    - username
    type: object
  github_com_naeemaei_golang-clean-web-api_api_dto.PagedList-github_com_naeemaei_golang-clean-web-api_api_dto_CityResponse:
    properties:
      hasNextPage:
        type: boolean
      hasPreviousPage:
        type: boolean
      items:
        items:
          $ref: '#/definitions/github_com_naeemaei_golang-clean-web-api_api_dto.CityResponse'
        type: array
      pageNumber:
        type: integer
      total:
        type: integer
      totalPages:
        type: integer
    type: object
  github_com_naeemaei_golang-clean-web-api_api_dto.PagedList-github_com_naeemaei_golang-clean-web-api_api_dto_CountryResponse:
    properties:
      hasNextPage:
        type: boolean
      hasPreviousPage:
        type: boolean
      items:
        items:
          $ref: '#/definitions/github_com_naeemaei_golang-clean-web-api_api_dto.CountryResponse'
        type: array
      pageNumber:
        type: integer
      total:
        type: integer
      totalPages:
        type: integer
    type: object
  github_com_naeemaei_golang-clean-web-api_api_dto.PaginationInputWithFilter:
    properties:
      filter:
        additionalProperties:
          $ref: '#/definitions/github_com_naeemaei_golang-clean-web-api_api_dto.Filter'
        type: object
      pageNumber:
        type: integer
      pageSize:
        type: integer
      sort:
        items:
          $ref: '#/definitions/github_com_naeemaei_golang-clean-web-api_api_dto.Sort'
        type: array
    type: object
  github_com_naeemaei_golang-clean-web-api_api_dto.RegisterLoginByMobileRequest:
    properties:
      mobileNumber:
        maxLength: 11
        minLength: 11
        type: string
      otp:
        maxLength: 6
        minLength: 6
        type: string
    required:
    - mobileNumber
    - otp
    type: object
  github_com_naeemaei_golang-clean-web-api_api_dto.RegisterUserByUsernameRequest:
    properties:
      email:
        minLength: 6
        type: string
      firstName:
        minLength: 3
        type: string
      lastName:
        minLength: 6
        type: string
      password:
        minLength: 6
        type: string
      username:
        minLength: 5
        type: string
    required:
    - firstName
    - lastName
    - password
    - username
    type: object
  github_com_naeemaei_golang-clean-web-api_api_dto.Sort:
    properties:
      colId:
        type: string
      sort:
        type: string
    type: object
  github_com_naeemaei_golang-clean-web-api_api_dto.TokenDetail:
    properties:
      accessToken:
        type: string
      accessTokenExpireTime:
        type: integer
      refreshToken:
        type: string
      refreshTokenExpireTime:
        type: integer
    type: object
  github_com_naeemaei_golang-clean-web-api_api_helper.BaseHttpResponse:
    properties:
      error: {}
      result: {}
      resultCode:
        type: integer
      success:
        type: boolean
      validationErrors:
        items:
          $ref: '#/definitions/github_com_naeemaei_golang-clean-web-api_api_validations.ValidationError'
        type: array
    type: object
  github_com_naeemaei_golang-clean-web-api_api_validations.ValidationError:
    properties:
      message:
        type: string
      property:
        type: string
      tag:
        type: string
      value:
        type: string
    type: object
info:
  contact: {}
paths:
  /v1/cities/:
    post:
      consumes:
      - application/json
      description: Create a City
      parameters:
      - description: Create a City
        in: body
        name: Request
        required: true
        schema:
          $ref: '#/definitions/github_com_naeemaei_golang-clean-web-api_api_dto.CreateUpdateCityRequest'
      responses:
        "201":
          description: Created
          schema:
            allOf:
            - $ref: '#/definitions/github_com_naeemaei_golang-clean-web-api_api_helper.BaseHttpResponse'
            - properties:
                result:
                  $ref: '#/definitions/github_com_naeemaei_golang-clean-web-api_api_dto.CityResponse'
              type: object
        "400":
          description: Bad request
          schema:
            $ref: '#/definitions/github_com_naeemaei_golang-clean-web-api_api_helper.BaseHttpResponse'
      security:
      - AuthBearer: []
      summary: Create a City
      tags:
      - Cities
  /v1/cities/{id}:
    delete:
      consumes:
      - application/json
      description: Delete a City
      parameters:
      - description: Id
        in: path
        name: id
        required: true
        type: integer
      responses:
        "201":
          description: response
          schema:
            $ref: '#/definitions/github_com_naeemaei_golang-clean-web-api_api_helper.BaseHttpResponse'
        "400":
          description: Bad request
          schema:
            $ref: '#/definitions/github_com_naeemaei_golang-clean-web-api_api_helper.BaseHttpResponse'
      security:
      - AuthBearer: []
      summary: Delete a City
      tags:
      - Cities
    get:
      consumes:
      - application/json
      description: Get a City
      parameters:
      - description: Id
        in: path
        name: id
        required: true
        type: integer
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/github_com_naeemaei_golang-clean-web-api_api_helper.BaseHttpResponse'
            - properties:
                result:
                  $ref: '#/definitions/github_com_naeemaei_golang-clean-web-api_api_dto.CityResponse'
              type: object
        "400":
          description: Bad request
          schema:
            $ref: '#/definitions/github_com_naeemaei_golang-clean-web-api_api_helper.BaseHttpResponse'
      security:
      - AuthBearer: []
      summary: Get a City
      tags:
      - Cities
    put:
      consumes:
      - application/json
      description: Update a City
      parameters:
      - description: Id
        in: path
        name: id
        required: true
        type: integer
      - description: Update a City
        in: body
        name: Request
        required: true
        schema:
          $ref: '#/definitions/github_com_naeemaei_golang-clean-web-api_api_dto.CreateUpdateCityRequest'
      responses:
        "201":
          description: Created
          schema:
            allOf:
            - $ref: '#/definitions/github_com_naeemaei_golang-clean-web-api_api_helper.BaseHttpResponse'
            - properties:
                result:
                  $ref: '#/definitions/github_com_naeemaei_golang-clean-web-api_api_dto.CityResponse'
              type: object
        "400":
          description: Bad request
          schema:
            $ref: '#/definitions/github_com_naeemaei_golang-clean-web-api_api_helper.BaseHttpResponse'
      security:
      - AuthBearer: []
      summary: Update a City
      tags:
      - Cities
  /v1/cities/get-by-filter:
    post:
      consumes:
      - application/json
      description: get a City
      parameters:
      - description: request body
        in: body
        name: Request
        required: true
        schema:
          $ref: '#/definitions/github_com_naeemaei_golang-clean-web-api_api_dto.PaginationInputWithFilter'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/github_com_naeemaei_golang-clean-web-api_api_helper.BaseHttpResponse'
            - properties:
                result:
                  $ref: '#/definitions/github_com_naeemaei_golang-clean-web-api_api_dto.PagedList-github_com_naeemaei_golang-clean-web-api_api_dto_CityResponse'
                validationErrors:
                  type: object
              type: object
        "400":
          description: Description
          schema:
            $ref: '#/definitions/github_com_naeemaei_golang-clean-web-api_api_helper.BaseHttpResponse'
        "401":
          description: Description
          schema:
            allOf:
            - $ref: '#/definitions/github_com_naeemaei_golang-clean-web-api_api_helper.BaseHttpResponse'
            - properties:
                result:
                  type: object
                validationErrors:
                  type: object
              type: object
      security:
      - AuthBearer: []
      summary: get a City
      tags:
      - Cities
  /v1/countries/:
    post:
      consumes:
      - application/json
      description: Create a country
      parameters:
      - description: Create a country
        in: body
        name: Request
        required: true
        schema:
          $ref: '#/definitions/github_com_naeemaei_golang-clean-web-api_api_dto.CreateUpdateCountryRequest'
      responses:
        "201":
          description: Created
          schema:
            allOf:
            - $ref: '#/definitions/github_com_naeemaei_golang-clean-web-api_api_helper.BaseHttpResponse'
            - properties:
                result:
                  $ref: '#/definitions/github_com_naeemaei_golang-clean-web-api_api_dto.CountryResponse'
              type: object
        "400":
          description: Bad request
          schema:
            $ref: '#/definitions/github_com_naeemaei_golang-clean-web-api_api_helper.BaseHttpResponse'
      security:
      - AuthBearer: []
      summary: Create a country
      tags:
      - Countries
  /v1/countries/{id}:
    delete:
      consumes:
      - application/json
      description: Delete a country
      parameters:
      - description: Id
        in: path
        name: id
        required: true
        type: integer
      responses:
        "201":
          description: response
          schema:
            $ref: '#/definitions/github_com_naeemaei_golang-clean-web-api_api_helper.BaseHttpResponse'
        "400":
          description: Bad request
          schema:
            $ref: '#/definitions/github_com_naeemaei_golang-clean-web-api_api_helper.BaseHttpResponse'
      security:
      - AuthBearer: []
      summary: Delete a country
      tags:
      - Countries
    get:
      consumes:
      - application/json
      description: Get a country
      parameters:
      - description: Id
        in: path
        name: id
        required: true
        type: integer
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/github_com_naeemaei_golang-clean-web-api_api_helper.BaseHttpResponse'
            - properties:
                result:
                  $ref: '#/definitions/github_com_naeemaei_golang-clean-web-api_api_dto.CountryResponse'
              type: object
        "400":
          description: Bad request
          schema:
            $ref: '#/definitions/github_com_naeemaei_golang-clean-web-api_api_helper.BaseHttpResponse'
      security:
      - AuthBearer: []
      summary: Get a country
      tags:
      - Countries
    put:
      consumes:
      - application/json
      description: Update a country
      parameters:
      - description: Id
        in: path
        name: id
        required: true
        type: integer
      - description: Update a country
        in: body
        name: Request
        required: true
        schema:
          $ref: '#/definitions/github_com_naeemaei_golang-clean-web-api_api_dto.CreateUpdateCountryRequest'
      responses:
        "201":
          description: Created
          schema:
            allOf:
            - $ref: '#/definitions/github_com_naeemaei_golang-clean-web-api_api_helper.BaseHttpResponse'
            - properties:
                result:
                  $ref: '#/definitions/github_com_naeemaei_golang-clean-web-api_api_dto.CountryResponse'
              type: object
        "400":
          description: Bad request
          schema:
            $ref: '#/definitions/github_com_naeemaei_golang-clean-web-api_api_helper.BaseHttpResponse'
      security:
      - AuthBearer: []
      summary: Update a country
      tags:
      - Countries
  /v1/countries/get-by-filter:
    post:
      consumes:
      - application/json
      description: get a country
      parameters:
      - description: request body
        in: body
        name: Request
        required: true
        schema:
          $ref: '#/definitions/github_com_naeemaei_golang-clean-web-api_api_dto.PaginationInputWithFilter'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/github_com_naeemaei_golang-clean-web-api_api_helper.BaseHttpResponse'
            - properties:
                result:
                  $ref: '#/definitions/github_com_naeemaei_golang-clean-web-api_api_dto.PagedList-github_com_naeemaei_golang-clean-web-api_api_dto_CountryResponse'
                validationErrors:
                  type: object
              type: object
        "400":
          description: Description
          schema:
            $ref: '#/definitions/github_com_naeemaei_golang-clean-web-api_api_helper.BaseHttpResponse'
        "401":
          description: Description
          schema:
            allOf:
            - $ref: '#/definitions/github_com_naeemaei_golang-clean-web-api_api_helper.BaseHttpResponse'
            - properties:
                result:
                  type: object
                validationErrors:
                  type: object
              type: object
      security:
      - AuthBearer: []
      summary: get a country
      tags:
      - Countries
  /v1/health/:
    get:
      consumes:
      - application/json
      description: Health Check
      produces:
      - application/json
      responses:
        "200":
          description: Success
          schema:
            $ref: '#/definitions/github_com_naeemaei_golang-clean-web-api_api_helper.BaseHttpResponse'
        "400":
          description: Failed
          schema:
            $ref: '#/definitions/github_com_naeemaei_golang-clean-web-api_api_helper.BaseHttpResponse'
      summary: Health Check
      tags:
      - health
  /v1/test/binder/body:
    post:
      consumes:
      - application/json
      description: BodyBinder
      parameters:
      - description: person data
        in: body
        name: person
        required: true
        schema:
          $ref: '#/definitions/api_handlers.personData'
      produces:
      - application/json
      responses:
        "200":
          description: Success
          schema:
            allOf:
            - $ref: '#/definitions/github_com_naeemaei_golang-clean-web-api_api_helper.BaseHttpResponse'
            - properties:
                validationErrors:
                  type: object
              type: object
        "400":
          description: Failed
          schema:
            $ref: '#/definitions/github_com_naeemaei_golang-clean-web-api_api_helper.BaseHttpResponse'
      security:
      - AuthBearer: []
      summary: BodyBinder
      tags:
      - Test
  /v1/test/binder/uri/{id}/{name}:
    post:
      consumes:
      - application/json
      description: BodyBinder
      parameters:
      - description: user id
        in: path
        name: id
        required: true
        type: integer
      - description: user name
        in: path
        name: name
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Success
          schema:
            allOf:
            - $ref: '#/definitions/github_com_naeemaei_golang-clean-web-api_api_helper.BaseHttpResponse'
            - properties:
                validationErrors:
                  type: object
              type: object
        "400":
          description: Failed
          schema:
            $ref: '#/definitions/github_com_naeemaei_golang-clean-web-api_api_helper.BaseHttpResponse'
      security:
      - AuthBearer: []
      summary: BodyBinder
      tags:
      - Test
  /v1/test/user/{id}:
    get:
      consumes:
      - application/json
      description: UserById
      parameters:
      - description: user id
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Success
          schema:
            $ref: '#/definitions/github_com_naeemaei_golang-clean-web-api_api_helper.BaseHttpResponse'
        "400":
          description: Failed
          schema:
            $ref: '#/definitions/github_com_naeemaei_golang-clean-web-api_api_helper.BaseHttpResponse'
      summary: UserById
      tags:
      - Test
  /v1/users/login-by-mobile:
    post:
      consumes:
      - application/json
      description: RegisterLoginByMobileNumber
      parameters:
      - description: RegisterLoginByMobileRequest
        in: body
        name: Request
        required: true
        schema:
          $ref: '#/definitions/github_com_naeemaei_golang-clean-web-api_api_dto.RegisterLoginByMobileRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Success
          schema:
            allOf:
            - $ref: '#/definitions/github_com_naeemaei_golang-clean-web-api_api_helper.BaseHttpResponse'
            - properties:
                result:
                  $ref: '#/definitions/github_com_naeemaei_golang-clean-web-api_api_dto.TokenDetail'
              type: object
        "400":
          description: Failed
          schema:
            $ref: '#/definitions/github_com_naeemaei_golang-clean-web-api_api_helper.BaseHttpResponse'
        "409":
          description: Failed
          schema:
            $ref: '#/definitions/github_com_naeemaei_golang-clean-web-api_api_helper.BaseHttpResponse'
      summary: RegisterLoginByMobileNumber
      tags:
      - Users
  /v1/users/login-by-username:
    post:
      consumes:
      - application/json
      description: LoginByUsername
      parameters:
      - description: LoginByUsernameRequest
        in: body
        name: Request
        required: true
        schema:
          $ref: '#/definitions/github_com_naeemaei_golang-clean-web-api_api_dto.LoginByUsernameRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Success
          schema:
            allOf:
            - $ref: '#/definitions/github_com_naeemaei_golang-clean-web-api_api_helper.BaseHttpResponse'
            - properties:
                result:
                  $ref: '#/definitions/github_com_naeemaei_golang-clean-web-api_api_dto.TokenDetail'
              type: object
        "400":
          description: Failed
          schema:
            $ref: '#/definitions/github_com_naeemaei_golang-clean-web-api_api_helper.BaseHttpResponse'
        "409":
          description: Failed
          schema:
            $ref: '#/definitions/github_com_naeemaei_golang-clean-web-api_api_helper.BaseHttpResponse'
      summary: LoginByUsername
      tags:
      - Users
  /v1/users/register-by-username:
    post:
      consumes:
      - application/json
      description: RegisterByUsername
      parameters:
      - description: RegisterUserByUsernameRequest
        in: body
        name: Request
        required: true
        schema:
          $ref: '#/definitions/github_com_naeemaei_golang-clean-web-api_api_dto.RegisterUserByUsernameRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Success
          schema:
            $ref: '#/definitions/github_com_naeemaei_golang-clean-web-api_api_helper.BaseHttpResponse'
        "400":
          description: Failed
          schema:
            $ref: '#/definitions/github_com_naeemaei_golang-clean-web-api_api_helper.BaseHttpResponse'
        "409":
          description: Failed
          schema:
            $ref: '#/definitions/github_com_naeemaei_golang-clean-web-api_api_helper.BaseHttpResponse'
      summary: RegisterByUsername
      tags:
      - Users
  /v1/users/send-otp:
    post:
      consumes:
      - application/json
      description: Send otp to user
      parameters:
      - description: GetOtpRequest
        in: body
        name: Request
        required: true
        schema:
          $ref: '#/definitions/github_com_naeemaei_golang-clean-web-api_api_dto.GetOtpRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Success
          schema:
            $ref: '#/definitions/github_com_naeemaei_golang-clean-web-api_api_helper.BaseHttpResponse'
        "400":
          description: Failed
          schema:
            $ref: '#/definitions/github_com_naeemaei_golang-clean-web-api_api_helper.BaseHttpResponse'
        "409":
          description: Failed
          schema:
            $ref: '#/definitions/github_com_naeemaei_golang-clean-web-api_api_helper.BaseHttpResponse'
      summary: Send otp to user
      tags:
      - Users
securityDefinitions:
  AuthBearer:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
